# Docker

# Build and push an image to Azure Container Registry

# https://docs.microsoft.com/azure/devops/pipelines/languages/docker



# run on all branches

# ignore documentation updates

trigger:

  branches:

    include:

    - '*'

  paths:

    include:

    - src/*



# run on a PR to master

# ignore documentation updates

pr:

  branches:

    include:

    - master

  paths:

    include:

    - src/*



resources:

- repo: self



variables:

  # Container registry service connection

  # This has to be setup in advance

  # You can change this name to use an existing ACR service connection

  dockerRegistryServiceConnection: 'helium-acr'



  imageRepository: 'helium-csharp'

  containerRegistry: '$(dockerRegistryServiceConnection)'

  dockerfilePath: '$(Build.SourcesDirectory)/src/Dockerfile'

  tag: '$(Build.BuildId)'

  

  # Agent VM image name

  vmImageName: 'ubuntu-latest'



# UnitTest job runs on each check in

# Build job only runs on master branch



stages:

- stage: Build

  displayName: Build and push container

  jobs:

  - job: Build

    displayName: Build and test app



    pool:

      vmImage: $(vmImageName)



    steps:

    - script: |

         cd src



         docker build -t helium --target build .

         docker create --name helium helium

         docker cp helium:./src/unit-tests/TestResults .

         docker rm helium



         cd ..

      displayName: Run unit tests



    - task: PublishTestResults@2

      displayName: Publish test results

      inputs:

        testRunner: VSTest

        testResultsFiles: '**/*.trx'

        failTaskOnFailedTests: true



    - task: Docker@2

      condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

      displayName: Build and push to container registry

      inputs:

        command: buildAndPush

        repository: $(imageRepository)

        dockerfile: $(dockerfilePath)

        containerRegistry: $(dockerRegistryServiceConnection)

        tags: |

          $(tag)

          latest
